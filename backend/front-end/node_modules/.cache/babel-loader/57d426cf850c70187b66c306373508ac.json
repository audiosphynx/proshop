{"ast":null,"code":"import _slicedToArray from\"/Users/powland/Desktop/Code/Learn/1_CAREER/Full-Stack/React_Django_PostGreSQL/Udemy/Course_2/proshop/backend/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Form,Button,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import FormContainer from\"../components/FormContainer\";import CheckoutSteps from\"../components/CheckoutSteps\";import{savePaymentMethod}from\"../actions/cartActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();// Add paypal as default method. Lateron you can make it an empty string and let the user select an option\nvar _useState=useState(\"Paypal\"),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];if(!shippingAddress.address){history.push(\"/shipping\");}var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push(\"/placeorder\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),\" \",/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\"// Thi is where you can add in custom methods like stripe\n,label:\"Paypal or Credit Card\",id:\"Paypal\",name:\"paymentMethod\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default PaymentScreen;","map":{"version":3,"sources":["/Users/powland/Desktop/Code/Learn/1_CAREER/Full-Stack/React_Django_PostGreSQL/Udemy/Course_2/proshop/backend/front-end/src/screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","target","value"],"mappings":"yMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,QAASC,CAAAA,aAAT,MAAoC,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAClC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADkC,GAE1BE,CAAAA,eAF0B,CAENF,IAFM,CAE1BE,eAF0B,CAIlC,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA;AALkC,cAMQL,QAAQ,CAAC,QAAD,CANhB,wCAM3BgB,aAN2B,eAMZC,gBANY,eAQlC,GAAI,CAACH,eAAe,CAACI,OAArB,CAA8B,CAC5BP,OAAO,CAACQ,IAAR,CAAa,WAAb,EACD,CAED,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAP,QAAQ,CAACN,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACQ,IAAR,CAAa,aAAb,EACD,CAJD,CAMA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEC,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,CACqD,GADrD,cAEE,KAAC,GAAD,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OACL;AAFF,CAGE,KAAK,CAAC,uBAHR,CAIE,EAAE,CAAC,QAJL,CAKE,IAAI,CAAC,eALP,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,EAFF,GADF,cAgBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAhBF,GAHF,GADF,CA0BD,CAED,cAAed,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n  // Add paypal as default method. Lateron you can make it an empty string and let the user select an option\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>{\" \"}\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              // Thi is where you can add in custom methods like stripe\n              label=\"Paypal or Credit Card\"\n              id=\"Paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n"]},"metadata":{},"sourceType":"module"}